process {
    cpus   = { check_max( 1    * task.attempt, 'cpus'   ) }
    memory = { check_max( 2.GB * task.attempt, 'memory' ) }
    time   = { check_max( 1.h  * task.attempt, 'time'   ) }

    errorStrategy = { task.attempt <= 3 ? 'retry' : 'finish' }
    maxRetries    = 3
    maxErrors     = '-1'

//first three steps
    withLabel:get_barcodes {

        cpus   = { 1 }
        
        memory = { 1.GB * task.attempt }
       
        time = { task.attempt > 1 ? 24.hour : 12.hour }
        maxRetries    = 10
        errorStrategy = 'retry'
    }

    withLabel:supset_bam {

        cpus   = 8
        
        memory = { 1.GB * task.attempt }
       
        time = { task.attempt > 1 ? 24.hour : 12.hour }
        maxRetries    = 10
        errorStrategy = 'retry'
    }

    withLabel:combine_bams {

        cpus   = 1
        
        memory = { 1.GB * task.attempt }
        time = { task.attempt > 1 ? 24.hour : 12.hour }
        maxRetries    = 10
        errorStrategy = 'retry'
    }

    withLabel:bam_stats {
        cpus   = 8
        
        memory = { 10.GB * task.attempt }
        time = { task.attempt > 1 ? 24.hour : 12.hour }
        maxRetries    = 10
        errorStrategy = 'retry'
    }

    withLabel:split_reads {
        cpus   = 20
        
        memory = { 1.GB * task.attempt }
        time = { task.attempt > 1 ? 24.hour : 12.hour }
        maxRetries    = 10
        errorStrategy = 'retry'
    }
    withLabel:refine_reads {

        cpus   = 18
        
        memory = { 500.MB * task.attempt }

        time = { task.attempt > 1 ? 24.hour : 12.hour }
        maxRetries = 3
        errorStrategy = 'retry'
    }
    withLabel:tag_bam {

        cpus   = 5
        
        memory = { 250.MB * task.attempt }

        time = { task.attempt > 1 ? 24.hour : 12.hour }
        maxRetries = 3
        errorStrategy = 'retry'
    }
    withLabel:remove_primer {
        cpus   = 15
        memory = { 1.5.GB * task.attempt }
        time = { task.attempt > 1 ? 24.hour : 12.hour }
        maxRetries = 3
        errorStrategy = 'retry'
    }
    
    withLabel:barcodes {
        cpus   = { 10 * task.attempt }
        memory = { 40.GB * task.attempt }
        time = { task.attempt > 2 ? 24.hour : 12.hour }
        maxRetries = 3
        errorStrategy = 'retry'
    }
    withLabel:deduplication {
        cpus   = 8
	    memory = { task.exitStatus == 2 ? 30.GB : 30.GB * task.attempt }
        time = 12.hour
        maxRetries    = 2
        errorStrategy = 'retry'
    }
    withLabel:deconvolution {
        cpus   = 1
	    memory = { task.exitStatus == 2 ? 30.GB : 5.GB * task.attempt }
        time = 12.hour
        maxRetries    = 2
        errorStrategy = 'retry'
    }
    withLabel:cellsnp {
        cpus   = 10
	    memory = { task.exitStatus == 2 ? 30.GB : 8.GB * task.attempt }
        time = 12.hour
        maxRetries    = 2
        errorStrategy = 'retry'
    }
    withLabel:map_reads {
        cpus   = 10
        memory = { 20.GB * task.attempt }
        time = 12.hour
        maxRetries    = 1
        errorStrategy = 'retry'
    }

    withLabel:big_job {
        cpus   = 1
        memory = { 10.GB * task.attempt }
        time = 24.hour
        maxRetries    = 10
        errorStrategy = 'retry'
    }
    withLabel:big_job_collect {
        cpus   = 1
        memory = { 500.MB * task.attempt }
        time = 24.hour
        maxRetries    = 10
        errorStrategy = 'retry'
    }
    withLabel:collect_gtfs {
        cpus   = 1
        memory = { 25.GB * task.attempt }
        time = 24.hour
        maxRetries    = 10
        errorStrategy = 'retry'
    }
    withLabel:isoquant_chunked {

        cpus   = 2
        time = 24.hour
        maxRetries    = 1
        errorStrategy = 'retry'
    }

    withLabel:micro_multithread_job {

        cpus   = 3
        
        memory = { 250.MB * task.attempt }
        maxRetries    = 0
        errorStrategy = 'finish'
    }
    withLabel:micro_job {

        cpus   = 1
        
        memory = { 250.MB * task.attempt }
        maxRetries    = 0
        errorStrategy = 'finish'
    }

    withLabel:medium_job {

        cpus   = 1
        
        memory = { 200.MB * task.attempt }
        maxRetries    = 0
        errorStrategy = 'finish'
    }

    withLabel:mini_job {
        cpus   = 1
        memory = { 200.MB * task.attempt }
        maxRetries    = 0
        errorStrategy = 'finish'
    }
    withLabel:mini_job_local {
        executor = 'local'
        cpus   = 1
        
        memory = { 100.MB * task.attempt }
        maxRetries    = 0
        errorStrategy = 'finish'
    }

    withLabel:process_low {
        cpus   = { 1 }
        memory = { 20.GB * task.attempt }
        time = { task.attempt > 1 ? 24.hour : 12.hour }
        maxRetries    = 10
        errorStrategy = 'retry'
    }

    withLabel:sort_bc {

        cpus   = 5
        
        memory = { 150.GB }
       
        time = 12.hour
        maxRetries    = 0
        errorStrategy = 'retry'
    }
    withLabel:bcstats {

        cpus   = 5
        
        memory = { 70.GB * task.attempt }
       
        time = { task.attempt > 1 ? 24.hour : 12.hour }
        maxRetries    = 1
        errorStrategy = 'retry'
    }

    withLabel:isoquant {
    	
    	cpus = 5
        time = 24.hour
    	maxRetries = 1
    	memory = { task.attempt == 1 ? 400.GB : 400.GB * (0.75 * task.attempt) }
    	// Set error strategy based on error type
    	errorStrategy = { task.exitStatus == 130 ? 'retry' : 'ignore' }

    	// - Exit status 130 indicates a memory-related/time-related error
    	// - Other errors will be ignored to prevent pipeline interruption
    }
    withLabel:isoquant {
        cpus   = 5
        memory = { 400.GB * task.attempt }
        time = 24.hour
        maxRetries    = 1
        errorStrategy = 'ignore'
    }
    withLabel:isoquant_split_by_chr {
        cpus   = 1
        memory = { 8.GB * task.attempt }
        time = 12.hour
        maxRetries    = 1
        errorStrategy = 'retry'
    }

    withLabel:cluster_bams {
        cpus   = 20
        memory = { 300.GB * task.attempt }
        time = 24.hour
        maxRetries    = 1
        errorStrategy = 'retry'
    }
    withLabel:small_job {
        cpus   = 1
        memory = { 8.GB * task.attempt }
        maxRetries    = 0
        errorStrategy = 'retry'
    }

    withLabel:isoquant_chunked_local {
        executor = 'local'
        cpus   = 1
        maxRetries    = 0
        errorStrategy = 'finish'
    }

    withLabel:massive_job {
        cpus   = 1
        memory = { 64.GB * task.attempt }
        maxRetries    = 0
        errorStrategy = 'finish'
    }
    withLabel:classify_isoforms {
        cpus   = 10
        memory = { 150.GB * task.attempt }
        time = 12.hour
        maxRetries    = 0
        errorStrategy = 'retry'
    }
    withLabel:sqanti3 {
        cpus   = 10
        memory = { 150.GB * task.attempt }
        time = 12.hour
        maxRetries    = 1
        errorStrategy = 'retry'
    }
    withLabel:seurat_isoforms {
        cpus   = 5
        memory = { 60.GB * task.attempt }
        time = 12.hour
        maxRetries    = 0
        errorStrategy = 'retry'
    }
    withName: vireo{
        cpus   = 6
        time   = 12.h
        memory = { 20.GB * task.attempt }
    }
}
